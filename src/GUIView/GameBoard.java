package GUIView;

import Controller.GameCont;
import java.awt.Color;
import static java.awt.Color.white;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.IOException;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author PLUCSCE
 */
public class GameBoard extends javax.swing.JFrame {

    /**
     * Creates new form GameBoard
     */
    public GameBoard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        chatTA = new javax.swing.JTextArea();
        msgTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        boardView = new BoardView();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        start = new javax.swing.JMenuItem();
        pause = new javax.swing.JMenuItem();        
        quit = new javax.swing.JMenuItem();
        logOut = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        board30 = new javax.swing.JMenuItem();
        board40 = new javax.swing.JMenuItem();
        board50 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setBackground(new java.awt.Color(204,255,153));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        chatTA.setBackground(new java.awt.Color(51, 51, 51));
        chatTA.setColumns(20);
        chatTA.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        chatTA.setForeground(new java.awt.Color(255, 255, 255));
        chatTA.setRows(5);
        chatTA.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Window Chat", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 0, 14), new java.awt.Color(255, 0, 51))); // NOI18N
        jScrollPane2.setViewportView(chatTA);

        msgTF.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        msgTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgTFActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        jLabel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 153, 153), new java.awt.Color(255, 0, 0), new java.awt.Color(0, 153, 153), new java.awt.Color(255, 0, 0)));

        boardView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boardViewMouseClicked(evt);
            }
        });       
          
        javax.swing.GroupLayout boardViewLayout = new javax.swing.GroupLayout(boardView);
        boardView.setLayout(boardViewLayout);
        boardViewLayout.setHorizontalGroup(
            boardViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );
        boardViewLayout.setVerticalGroup(
            boardViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );

        menu.setText("Menu");
        
        start.setText("Start Game");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });
        menu.add(start);

        pause.setText("Pause Game");
        pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseActionPerformed(evt);
            }
        });
        menu.add(pause);
        
        quit.setText("Quit");
        quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitActionPerformed(evt);
            }
        });
        menu.add(quit);
        
        logOut.setText("Log Out");
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });
        menu.add(logOut);

        jMenuBar1.add(menu);

        jMenu2.setText("Game Options");

        board30.setText("30x30 (Default)");
        board30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                board30ActionPerformed(evt);
            }
        });
        jMenu2.add(board30);

        board40.setText("40x40");
        board40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                board40ActionPerformed(evt);
            }
        });
        jMenu2.add(board40);

        board50.setText("50x50");
        board50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                board50ActionPerformed(evt);
            }
        });
        jMenu2.add(board50);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);
        
        

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(boardView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msgTF, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boardView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(msgTF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }
    private void quitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitActionPerformed
        controller.listen("quit");
    }//GEN-LAST:event_quitActionPerformed

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        controller.listen("logOut");
    }//GEN-LAST:event_logOutActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        controller.listen("close");
    }//GEN-LAST:event_formWindowClosing

    private void board30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_board30ActionPerformed
        controller.updateUserInfo("30");
        controller.listen("size");
    }//GEN-LAST:event_board30ActionPerformed

    private void board40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_board40ActionPerformed
        controller.updateUserInfo("40");
        controller.listen("size");
    }//GEN-LAST:event_board40ActionPerformed

    private void board50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_board50ActionPerformed
        controller.updateUserInfo("50");
        controller.listen("size");
    }//GEN-LAST:event_board50ActionPerformed

    private void msgTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgTFActionPerformed
        controller.updateUserInfo(msgTF.getText());
        controller.listen("chat");
        msgTF.setText("");
    }//GEN-LAST:event_msgTFActionPerformed
    
    private void boardViewMouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        int x, y ;
        x = evt.getX();
        y = evt.getY();
        controller.updateUserInfo(x+"_"+y);
        if(evt.getClickCount() == 1)
            controller.listen("singleClick");
        else
            controller.listen("doubleClick");
    }      
    
    private void startActionPerformed(java.awt.event.ActionEvent evt) { 
        controller.listen("start");
    }  
    
    private void pauseActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameBoard().setVisible(true);                
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem board30;
    private javax.swing.JMenuItem board40;
    private javax.swing.JMenuItem board50;
    public javax.swing.JTextArea chatTA;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem logOut;
    private javax.swing.JMenu menu;
    private javax.swing.JTextField msgTF;
    private javax.swing.JMenuItem pause;
    private javax.swing.JMenuItem quit;
    private javax.swing.JMenuItem start;
    private GameCont controller;
    private BoardView boardView;
    public int counter ; 
    // End of variables declaration//GEN-END:variables

    /**
     * Set the controller to the login view
     * @param controller
     */
    public void setController(GameCont controller){
    	this.controller = controller;
        boardView.setController(controller);
    }  
    
    public void setViewTitle(String usr){
        setTitle("Game Room of: " + usr);
    }
    
    public void setJLable(String player){
        jLabel3.setText("  Turn : " + player);
    }
    
    public void reDrawBoard() {
        boardView.reDrawBoard();
    }  
    
}
